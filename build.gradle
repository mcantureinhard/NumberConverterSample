buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.6.RELEASE")
        classpath ("io.spring.gradle:dependency-management-plugin:1.0.8.RELEASE")
        classpath("com.moowork.gradle:gradle-node-plugin:1.3.1")
    }
}

plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'org.springframework.boot' version "2.1.6.RELEASE"
    id 'io.spring.dependency-management' version "1.0.8.RELEASE"
    id "com.moowork.node" version "1.3.1"
}

sourceSets {
    test {
        java {
            srcDirs = ['src/bdd/java']
        }
        resources {
            srcDirs = ['src/bdd-test/resources']
        }
    }
}

version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    testCompile 'info.cukes:cucumber-java:1.2.5'
    testCompile 'info.cukes:cucumber-core:1.2.5'
    testCompile 'info.cukes:cucumber-junit:1.2.5'
    testCompile 'info.cukes:cucumber-spring:1.2.5'
    testCompile 'info.cukes:gherkin:2.12.2'
    testCompile 'junit:junit:4.11'
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

node {
    version = '10.15.2'

    npmVersion='6.9.0'

    download = false

    // Set the work directory for unpacking node
    workDir = file("${project.buildDir}/nodejs")

    // Set the work directory for NPM
    npmWorkDir = file("${project.buildDir}/npm")
}

task appNpmInstall(type: NpmTask) {
    description = "Installs all dependencies from package.json"
    workingDir = file("${project.projectDir}/src/main/webapp")
    args = ["install"]
}

task appNpmBuild(type: NpmTask) {
    description = "Builds production version of the webapp"
    workingDir = file("${project.projectDir}/src/main/webapp")
    args = ["run", "build"]
}

task copyWebApp(type: Copy) {
    from 'src/main/webapp/build'
    into 'build/resources/main/static/.'
}

appNpmBuild.dependsOn appNpmInstall
copyWebApp.dependsOn appNpmBuild
compileJava.dependsOn copyWebApp

bootJar {
    archiveName = "NumberConverterSample.jar"
    mainClassName = 'com.example.NumberConverter'

    from('build/resources/main/static') {
        into 'static'
    }
}